#
#   This test ensures that two-phase XA transactions have their first and
# second phases parallelized for both XA COMMIT and XA ROLLBACK. It ensures the
# following behaviors:
#
#   Test Case 1: Ensure that a 2-phase XA transaction has its XA PREPARE and
# XA COMMIT/ROLLBACK run concurrently. That is, the XA COMMIT/ROLLBACK will
# wait at group commit until the XA PREPARE binlogs, and then it will wait
# again until the XA PREPARE finishes preparing in all engines. At this point,
# the XA COMMIT/ROLLBACK will run to completion.
#
#   Test Case 2: If two XA transactions have different XIDs, if XA COMMIT ends
# a transaction, ensure both phases of both transactions can all execute
# concurrently.
#
#
#   Test Case 3: Two current 2-phase XA transactions with matching XIDs should
# run one after the other, while each transaction still allows both phases of
# its own transaction to run concurrently.
#
#   Test Case 4: Error Case. If an XAP errors while its XAC/R is waiting on it,
# both the XAP and XAC/R should rollback successfully. Note this tests both:
#    a) XAC/R is waiting in group commit (first phase times out in DMLs)
#    b) XAC/R is waiting in group commit, with another XAP with a duplicate XID
#       waiting on it.
#
#
# References:
#   MDEV-31949: slow parallel replication of user xa
#
--source include/have_innodb.inc
--source include/have_binlog_format_mixed.inc
--source include/master-slave.inc

--let $xa_complete_sym= COMMIT
--source include/rpl_xa_concurrent_2pc.inc

--let $xa_complete_sym= ROLLBACK
--source include/rpl_xa_concurrent_2pc.inc

--source include/rpl_end.inc
--echo # End of rpl_xa_concurrent_2pc.test
